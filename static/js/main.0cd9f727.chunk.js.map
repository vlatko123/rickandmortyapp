{"version":3,"sources":["Components/SearchBar.js","Components/Card.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","searchElement","inputHandler","className","type","placeholder","value","onChange","e","Card","location","name","pic","status","src","Home","state","charachters","onChangeHandler","setState","target","console","log","axios","get","then","res","data","results","filtered","this","filter","toLowerCase","includes","map","item","index","image","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4UAkBeA,EAfG,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,cAAcC,EAAmB,EAAnBA,aAMhC,OACE,qBAAKC,UAAU,wBAAf,SACE,+BACE,uBAAOC,KAAK,SAASC,YAAY,oBAAoBC,MAAOL,EAAeM,SAPxD,SAACC,GACpBN,EAAaM,WCcNC,G,MAjBF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACnC,OACE,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKW,IAAKF,MAEZ,sBAAKT,UAAU,UAAf,UACE,6BAAKQ,IACL,4BAAIE,IACJ,0CACA,4BAAIH,YCsDGK,E,4MA5DbC,MAAQ,CACNC,YAAa,GACbhB,cAAe,I,EAWjBiB,gBAAkB,SAACV,GACjB,EAAKW,SAAS,CACZlB,cAAeO,EAAEY,OAAOd,QAE1Be,QAAQC,IAAI,EAAKN,MAAMf,gB,uDAZzB,WAAqB,IAAD,OAClBsB,IAAMC,IAAI,6CAA6CC,MAAK,SAACC,GAC3D,EAAKP,SAAS,CACZF,YAAaS,EAAIC,KAAKC,UAExBP,QAAQC,IAAI,EAAKN,MAAMC,kB,oBAU3B,WAAU,IAAD,OACDY,EAAWC,KAAKd,MAAMC,YAAYc,QAAO,SAACpB,GAE9C,OADiBA,EAAKA,KAAKqB,cACXC,SAAS,EAAKjB,MAAMf,cAAc+B,kBAEpD,OACE,gCACE,8BACE,cAAC,EAAD,CACE/B,cAAe6B,KAAKd,MAAMf,cAC1BC,aAAc,SAACM,GAAD,OAAO,EAAKU,gBAAgBV,QAY9C,qBAAKL,UAAU,eAAf,SACG0B,EAASK,KAAI,SAACC,EAAMC,GACnB,OACE,cAAC,EAAD,CAEE1B,SAAUyB,EAAKzB,SAASC,KACxBA,KAAMwB,EAAKxB,KACXC,IAAKuB,EAAKE,MACVxB,OAAQsB,EAAKtB,QAJRuB,e,GA/CFE,aCUJC,MAbf,WAIE,OACE,qBAAKpC,UAAU,MAAf,SAEE,cAAC,EAAD,OCESqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0cd9f727.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../Components/SearchBar.css';\r\n\r\nconst SearchBar = ({searchElement,inputHandler }) => {\r\n\r\n    const onChangeHandler =(e) => {\r\n        inputHandler(e)\r\n    }\r\n\r\n  return (\r\n    <div className=\"search-bar-background\">\r\n      <form>\r\n        <input type=\"search\" placeholder=\"Search charachter\" value={searchElement} onChange={onChangeHandler} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport '../Components/Card.css';\r\n\r\nconst Card = ({ location, name, pic, status }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-placeholder\">\r\n        <img src={pic} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <h2>{name}</h2>\r\n        <p>{status}</p>\r\n        <p>Last seen</p>\r\n        <p>{location}</p>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport '../Components/Home.css';\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Card from \"./Card\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    charachters: [],\r\n    searchElement: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://rickandmortyapi.com/api/character\").then((res) => {\r\n      this.setState({\r\n        charachters: res.data.results,\r\n      });\r\n      console.log(this.state.charachters);\r\n    });\r\n  }\r\n  onChangeHandler = (e) => {\r\n    this.setState({\r\n      searchElement: e.target.value,\r\n    });\r\n    console.log(this.state.searchElement);\r\n  };\r\n\r\n  render() {\r\n    const filtered = this.state.charachters.filter((name) => {\r\n      const fullName = name.name.toLowerCase();\r\n      return fullName.includes(this.state.searchElement.toLowerCase());\r\n    });\r\n    return (\r\n      <div>\r\n        <div>\r\n          <SearchBar\r\n            searchElement={this.state.searchElement}\r\n            inputHandler={(e) => this.onChangeHandler(e)}\r\n          />\r\n        </div>\r\n\r\n        {/* <form>\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search your charachter\"\r\n            value={this.state.searchElement}\r\n            onChange={(e) => this.onChangeHandler(e)}\r\n          />\r\n        </form> */}\r\n        <div className=\"card-wrapper\">\r\n          {filtered.map((item, index) => {\r\n            return (\r\n              <Card\r\n                key={index}\r\n                location={item.location.name}\r\n                name={item.name}\r\n                pic={item.image}\r\n                status={item.status}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\nimport Home from './Components/Home';\n\nfunction App() {\n  \n\n\n  return (\n    <div className=\"App\">\n\n      <Home />\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}